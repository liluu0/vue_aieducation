{"ast":null,"code":"require(\"core-js/modules/es.array-buffer.detached.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\nvar Lame = require('./Lame.js');\nvar Presets = require('./Presets.js');\nvar GainAnalysis = require('./GainAnalysis.js');\nvar QuantizePVT = require('./QuantizePVT.js');\nvar Quantize = require('./Quantize.js');\nvar Takehiro = require('./Takehiro.js');\nvar Reservoir = require('./Reservoir.js');\nvar MPEGMode = require('./MPEGMode.js');\nvar BitStream = require('./BitStream.js');\nvar Encoder = require('./Encoder.js');\nvar Version = require('./Version.js');\nvar VBRTag = require('./VBRTag.js');\nfunction GetAudio() {\n  var parse;\n  var mpg;\n  this.setModules = function (parse2, mpg2) {\n    parse = parse2;\n    mpg = mpg2;\n  };\n}\nfunction Parse() {\n  var ver;\n  var id3;\n  var pre;\n  this.setModules = function (ver2, id32, pre2) {\n    ver = ver2;\n    id3 = id32;\n    pre = pre2;\n  };\n}\nfunction MPGLib() {}\nfunction ID3Tag() {\n  var bits;\n  var ver;\n  this.setModules = function (_bits, _ver) {\n    bits = _bits;\n    ver = _ver;\n  };\n}\nfunction Mp3Encoder(channels, samplerate, kbps) {\n  if (arguments.length != 3) {\n    console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n    channels = 1;\n    samplerate = 44100;\n    kbps = 128;\n  }\n  var lame = new Lame();\n  var gaud = new GetAudio();\n  var ga = new GainAnalysis();\n  var bs = new BitStream();\n  var p = new Presets();\n  var qupvt = new QuantizePVT();\n  var qu = new Quantize();\n  var vbr = new VBRTag();\n  var ver = new Version();\n  var id3 = new ID3Tag();\n  var rv = new Reservoir();\n  var tak = new Takehiro();\n  var parse = new Parse();\n  var mpg = new MPGLib();\n  lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n  bs.setModules(ga, mpg, ver, vbr);\n  id3.setModules(bs, ver);\n  p.setModules(lame);\n  qu.setModules(bs, rv, qupvt, tak);\n  qupvt.setModules(tak, rv, lame.enc.psy);\n  rv.setModules(bs);\n  tak.setModules(qupvt);\n  vbr.setModules(lame, bs, ver);\n  gaud.setModules(parse, mpg);\n  parse.setModules(ver, id3, p);\n  var gfp = lame.lame_init();\n  gfp.num_channels = channels;\n  gfp.in_samplerate = samplerate;\n  gfp.brate = kbps;\n  gfp.mode = MPEGMode.STEREO;\n  gfp.quality = 3;\n  gfp.bWriteVbrTag = false;\n  gfp.disable_reservoir = true;\n  gfp.write_id3tag_automatic = false;\n  var retcode = lame.lame_init_params(gfp);\n  assert(0 == retcode);\n  var maxSamples = 1152;\n  var mp3buf_size = 0 | 1.25 * maxSamples + 7200;\n  var mp3buf = new_byte(mp3buf_size);\n  this.encodeBuffer = function (left, right) {\n    if (channels == 1) {\n      right = left;\n    }\n    assert(left.length == right.length);\n    if (left.length > maxSamples) {\n      maxSamples = left.length;\n      mp3buf_size = 0 | 1.25 * maxSamples + 7200;\n      mp3buf = new_byte(mp3buf_size);\n    }\n    var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n    return new Int8Array(mp3buf.subarray(0, _sz));\n  };\n  this.flush = function () {\n    var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n    return new Int8Array(mp3buf.subarray(0, _sz));\n  };\n}\nfunction WavHeader() {\n  this.dataOffset = 0;\n  this.dataLen = 0;\n  this.channels = 0;\n  this.sampleRate = 0;\n}\nfunction fourccToInt(fourcc) {\n  return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\nWavHeader.readHeader = function (dataView) {\n  var w = new WavHeader();\n  var header = dataView.getUint32(0, false);\n  if (WavHeader.RIFF != header) {\n    return;\n  }\n  var fileLen = dataView.getUint32(4, true);\n  if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n    return;\n  }\n  if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n    return;\n  }\n  var fmtLen = dataView.getUint32(16, true);\n  var pos = 16 + 4;\n  switch (fmtLen) {\n    case 16:\n    case 18:\n      w.channels = dataView.getUint16(pos + 2, true);\n      w.sampleRate = dataView.getUint32(pos + 4, true);\n      break;\n    default:\n      throw 'extended fmt chunk not implemented';\n  }\n  pos += fmtLen;\n  var data = WavHeader.data;\n  var len = 0;\n  while (data != header) {\n    header = dataView.getUint32(pos, false);\n    len = dataView.getUint32(pos + 4, true);\n    if (data == header) {\n      break;\n    }\n    pos += len + 8;\n  }\n  w.dataLen = len;\n  w.dataOffset = pos + 8;\n  return w;\n};\nmodule.exports.Mp3Encoder = Mp3Encoder;\nmodule.exports.WavHeader = WavHeader;","map":{"version":3,"names":["common","require","System","VbrMode","Float","ShortBlock","Util","Arrays","new_array_n","new_byte","new_double","new_float","new_float_n","new_int","new_int_n","assert","Lame","Presets","GainAnalysis","QuantizePVT","Quantize","Takehiro","Reservoir","MPEGMode","BitStream","Encoder","Version","VBRTag","GetAudio","parse","mpg","setModules","parse2","mpg2","Parse","ver","id3","pre","ver2","id32","pre2","MPGLib","ID3Tag","bits","_bits","_ver","Mp3Encoder","channels","samplerate","kbps","arguments","length","console","error","lame","gaud","ga","bs","p","qupvt","qu","vbr","rv","tak","enc","psy","gfp","lame_init","num_channels","in_samplerate","brate","mode","STEREO","quality","bWriteVbrTag","disable_reservoir","write_id3tag_automatic","retcode","lame_init_params","maxSamples","mp3buf_size","mp3buf","encodeBuffer","left","right","_sz","lame_encode_buffer","Int8Array","subarray","flush","lame_encode_flush","WavHeader","dataOffset","dataLen","sampleRate","fourccToInt","fourcc","charCodeAt","RIFF","WAVE","fmt_","data","readHeader","dataView","w","header","getUint32","fileLen","fmtLen","pos","getUint16","len","module","exports"],"sources":["D:/代码/vscodeProjects/AiEducation/vue_aieducation/node_modules/lamejs/src/js/index.js"],"sourcesContent":["var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Lame = require('./Lame.js');\nvar Presets = require('./Presets.js');\nvar GainAnalysis = require('./GainAnalysis.js');\nvar QuantizePVT = require('./QuantizePVT.js');\nvar Quantize = require('./Quantize.js');\nvar Takehiro = require('./Takehiro.js');\nvar Reservoir = require('./Reservoir.js');\nvar MPEGMode = require('./MPEGMode.js');\nvar BitStream = require('./BitStream.js');\nvar Encoder = require('./Encoder.js');\nvar Version = require('./Version.js');\nvar VBRTag = require('./VBRTag.js');\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    }\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    }\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    }\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag();\n    var ver = new Version();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nmodule.exports.Mp3Encoder = Mp3Encoder;\nmodule.exports.WavHeader = WavHeader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}