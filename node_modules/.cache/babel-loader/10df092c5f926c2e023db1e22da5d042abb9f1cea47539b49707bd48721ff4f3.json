{"ast":null,"code":"/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\nvar Encoder = require('./Encoder.js');\nfunction NewMDCT() {\n  var enwindow = [-4.77e-07 * 0.740951125354959 / 2.384e-06, 1.03951e-04 * 0.740951125354959 / 2.384e-06, 9.53674e-04 * 0.740951125354959 / 2.384e-06, 2.841473e-03 * 0.740951125354959 / 2.384e-06, 3.5758972e-02 * 0.740951125354959 / 2.384e-06, 3.401756e-03 * 0.740951125354959 / 2.384e-06, 9.83715e-04 * 0.740951125354959 / 2.384e-06, 9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n  1.2398e-05 * 0.740951125354959 / 2.384e-06, 1.91212e-04 * 0.740951125354959 / 2.384e-06, 2.283096e-03 * 0.740951125354959 / 2.384e-06, 1.6994476e-02 * 0.740951125354959 / 2.384e-06, -1.8756866e-02 * 0.740951125354959 / 2.384e-06, -2.630711e-03 * 0.740951125354959 / 2.384e-06, -2.47478e-04 * 0.740951125354959 / 2.384e-06, -1.4782e-05 * 0.740951125354959 / 2.384e-06, 9.063471690191471e-01, 1.960342806591213e-01, -4.77e-07 * 0.773010453362737 / 2.384e-06, 1.05858e-04 * 0.773010453362737 / 2.384e-06, 9.30786e-04 * 0.773010453362737 / 2.384e-06, 2.521515e-03 * 0.773010453362737 / 2.384e-06, 3.5694122e-02 * 0.773010453362737 / 2.384e-06, 3.643036e-03 * 0.773010453362737 / 2.384e-06, 9.91821e-04 * 0.773010453362737 / 2.384e-06, 9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n  1.1444e-05 * 0.773010453362737 / 2.384e-06, 1.65462e-04 * 0.773010453362737 / 2.384e-06, 2.110004e-03 * 0.773010453362737 / 2.384e-06, 1.6112804e-02 * 0.773010453362737 / 2.384e-06, -1.9634247e-02 * 0.773010453362737 / 2.384e-06, -2.803326e-03 * 0.773010453362737 / 2.384e-06, -2.77042e-04 * 0.773010453362737 / 2.384e-06, -1.6689e-05 * 0.773010453362737 / 2.384e-06, 8.206787908286602e-01, 3.901806440322567e-01, -4.77e-07 * 0.803207531480645 / 2.384e-06, 1.07288e-04 * 0.803207531480645 / 2.384e-06, 9.02653e-04 * 0.803207531480645 / 2.384e-06, 2.174854e-03 * 0.803207531480645 / 2.384e-06, 3.5586357e-02 * 0.803207531480645 / 2.384e-06, 3.858566e-03 * 0.803207531480645 / 2.384e-06, 9.95159e-04 * 0.803207531480645 / 2.384e-06, 9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n  1.0014e-05 * 0.803207531480645 / 2.384e-06, 1.40190e-04 * 0.803207531480645 / 2.384e-06, 1.937389e-03 * 0.803207531480645 / 2.384e-06, 1.5233517e-02 * 0.803207531480645 / 2.384e-06, -2.0506859e-02 * 0.803207531480645 / 2.384e-06, -2.974033e-03 * 0.803207531480645 / 2.384e-06, -3.07560e-04 * 0.803207531480645 / 2.384e-06, -1.8120e-05 * 0.803207531480645 / 2.384e-06, 7.416505462720353e-01, 5.805693545089249e-01, -4.77e-07 * 0.831469612302545 / 2.384e-06, 1.08242e-04 * 0.831469612302545 / 2.384e-06, 8.68797e-04 * 0.831469612302545 / 2.384e-06, 1.800537e-03 * 0.831469612302545 / 2.384e-06, 3.5435200e-02 * 0.831469612302545 / 2.384e-06, 4.049301e-03 * 0.831469612302545 / 2.384e-06, 9.94205e-04 * 0.831469612302545 / 2.384e-06, 9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n  9.060e-06 * 0.831469612302545 / 2.384e-06, 1.16348e-04 * 0.831469612302545 / 2.384e-06, 1.766682e-03 * 0.831469612302545 / 2.384e-06, 1.4358521e-02 * 0.831469612302545 / 2.384e-06, -2.1372318e-02 * 0.831469612302545 / 2.384e-06, -3.14188e-03 * 0.831469612302545 / 2.384e-06, -3.39031e-04 * 0.831469612302545 / 2.384e-06, -1.9550e-05 * 0.831469612302545 / 2.384e-06, 6.681786379192989e-01, 7.653668647301797e-01, -4.77e-07 * 0.857728610000272 / 2.384e-06, 1.08719e-04 * 0.857728610000272 / 2.384e-06, 8.29220e-04 * 0.857728610000272 / 2.384e-06, 1.399517e-03 * 0.857728610000272 / 2.384e-06, 3.5242081e-02 * 0.857728610000272 / 2.384e-06, 4.215240e-03 * 0.857728610000272 / 2.384e-06, 9.89437e-04 * 0.857728610000272 / 2.384e-06, 8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n  8.106e-06 * 0.857728610000272 / 2.384e-06, 9.3937e-05 * 0.857728610000272 / 2.384e-06, 1.597881e-03 * 0.857728610000272 / 2.384e-06, 1.3489246e-02 * 0.857728610000272 / 2.384e-06, -2.2228718e-02 * 0.857728610000272 / 2.384e-06, -3.306866e-03 * 0.857728610000272 / 2.384e-06, -3.71456e-04 * 0.857728610000272 / 2.384e-06, -2.1458e-05 * 0.857728610000272 / 2.384e-06, 5.993769336819237e-01, 9.427934736519954e-01, -4.77e-07 * 0.881921264348355 / 2.384e-06, 1.08719e-04 * 0.881921264348355 / 2.384e-06, 7.8392e-04 * 0.881921264348355 / 2.384e-06, 9.71317e-04 * 0.881921264348355 / 2.384e-06, 3.5007000e-02 * 0.881921264348355 / 2.384e-06, 4.357815e-03 * 0.881921264348355 / 2.384e-06, 9.80854e-04 * 0.881921264348355 / 2.384e-06, 8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n  7.629e-06 * 0.881921264348355 / 2.384e-06, 7.2956e-05 * 0.881921264348355 / 2.384e-06, 1.432419e-03 * 0.881921264348355 / 2.384e-06, 1.2627602e-02 * 0.881921264348355 / 2.384e-06, -2.3074150e-02 * 0.881921264348355 / 2.384e-06, -3.467083e-03 * 0.881921264348355 / 2.384e-06, -4.04358e-04 * 0.881921264348355 / 2.384e-06, -2.3365e-05 * 0.881921264348355 / 2.384e-06, 5.345111359507916e-01, 1.111140466039205e+00, -9.54e-07 * 0.903989293123443 / 2.384e-06, 1.08242e-04 * 0.903989293123443 / 2.384e-06, 7.31945e-04 * 0.903989293123443 / 2.384e-06, 5.15938e-04 * 0.903989293123443 / 2.384e-06, 3.4730434e-02 * 0.903989293123443 / 2.384e-06, 4.477024e-03 * 0.903989293123443 / 2.384e-06, 9.68933e-04 * 0.903989293123443 / 2.384e-06, 8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n  6.676e-06 * 0.903989293123443 / 2.384e-06, 5.2929e-05 * 0.903989293123443 / 2.384e-06, 1.269817e-03 * 0.903989293123443 / 2.384e-06, 1.1775017e-02 * 0.903989293123443 / 2.384e-06, -2.3907185e-02 * 0.903989293123443 / 2.384e-06, -3.622532e-03 * 0.903989293123443 / 2.384e-06, -4.38213e-04 * 0.903989293123443 / 2.384e-06, -2.5272e-05 * 0.903989293123443 / 2.384e-06, 4.729647758913199e-01, 1.268786568327291e+00, -9.54e-07 * 0.92387953251128675613 / 2.384e-06, 1.06812e-04 * 0.92387953251128675613 / 2.384e-06, 6.74248e-04 * 0.92387953251128675613 / 2.384e-06, 3.3379e-05 * 0.92387953251128675613 / 2.384e-06, 3.4412861e-02 * 0.92387953251128675613 / 2.384e-06, 4.573822e-03 * 0.92387953251128675613 / 2.384e-06, 9.54151e-04 * 0.92387953251128675613 / 2.384e-06, 7.6771e-05 * 0.92387953251128675613 / 2.384e-06, 6.199e-06 * 0.92387953251128675613 / 2.384e-06, 3.4332e-05 * 0.92387953251128675613 / 2.384e-06, 1.111031e-03 * 0.92387953251128675613 / 2.384e-06, 1.0933399e-02 * 0.92387953251128675613 / 2.384e-06, -2.4725437e-02 * 0.92387953251128675613 / 2.384e-06, -3.771782e-03 * 0.92387953251128675613 / 2.384e-06, -4.72546e-04 * 0.92387953251128675613 / 2.384e-06, -2.7657e-05 * 0.92387953251128675613 / 2.384e-06, 4.1421356237309504879e-01, /* tan(PI/8) */\n  1.414213562373095e+00, -9.54e-07 * 0.941544065183021 / 2.384e-06, 1.05381e-04 * 0.941544065183021 / 2.384e-06, 6.10352e-04 * 0.941544065183021 / 2.384e-06, -4.75883e-04 * 0.941544065183021 / 2.384e-06, 3.4055710e-02 * 0.941544065183021 / 2.384e-06, 4.649162e-03 * 0.941544065183021 / 2.384e-06, 9.35555e-04 * 0.941544065183021 / 2.384e-06, 7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n  5.245e-06 * 0.941544065183021 / 2.384e-06, 1.7166e-05 * 0.941544065183021 / 2.384e-06, 9.56535e-04 * 0.941544065183021 / 2.384e-06, 1.0103703e-02 * 0.941544065183021 / 2.384e-06, -2.5527000e-02 * 0.941544065183021 / 2.384e-06, -3.914356e-03 * 0.941544065183021 / 2.384e-06, -5.07355e-04 * 0.941544065183021 / 2.384e-06, -3.0041e-05 * 0.941544065183021 / 2.384e-06, 3.578057213145241e-01, 1.546020906725474e+00, -9.54e-07 * 0.956940335732209 / 2.384e-06, 1.02520e-04 * 0.956940335732209 / 2.384e-06, 5.39303e-04 * 0.956940335732209 / 2.384e-06, -1.011848e-03 * 0.956940335732209 / 2.384e-06, 3.3659935e-02 * 0.956940335732209 / 2.384e-06, 4.703045e-03 * 0.956940335732209 / 2.384e-06, 9.15051e-04 * 0.956940335732209 / 2.384e-06, 7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n  4.768e-06 * 0.956940335732209 / 2.384e-06, 9.54e-07 * 0.956940335732209 / 2.384e-06, 8.06808e-04 * 0.956940335732209 / 2.384e-06, 9.287834e-03 * 0.956940335732209 / 2.384e-06, -2.6310921e-02 * 0.956940335732209 / 2.384e-06, -4.048824e-03 * 0.956940335732209 / 2.384e-06, -5.42164e-04 * 0.956940335732209 / 2.384e-06, -3.2425e-05 * 0.956940335732209 / 2.384e-06, 3.033466836073424e-01, 1.662939224605090e+00, -1.431e-06 * 0.970031253194544 / 2.384e-06, 9.9182e-05 * 0.970031253194544 / 2.384e-06, 4.62532e-04 * 0.970031253194544 / 2.384e-06, -1.573563e-03 * 0.970031253194544 / 2.384e-06, 3.3225536e-02 * 0.970031253194544 / 2.384e-06, 4.737377e-03 * 0.970031253194544 / 2.384e-06, 8.91685e-04 * 0.970031253194544 / 2.384e-06, 6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n  4.292e-06 * 0.970031253194544 / 2.384e-06, -1.3828e-05 * 0.970031253194544 / 2.384e-06, 6.61850e-04 * 0.970031253194544 / 2.384e-06, 8.487225e-03 * 0.970031253194544 / 2.384e-06, -2.7073860e-02 * 0.970031253194544 / 2.384e-06, -4.174709e-03 * 0.970031253194544 / 2.384e-06, -5.76973e-04 * 0.970031253194544 / 2.384e-06, -3.4809e-05 * 0.970031253194544 / 2.384e-06, 2.504869601913055e-01, 1.763842528696710e+00, -1.431e-06 * 0.98078528040323 / 2.384e-06, 9.5367e-05 * 0.98078528040323 / 2.384e-06, 3.78609e-04 * 0.98078528040323 / 2.384e-06, -2.161503e-03 * 0.98078528040323 / 2.384e-06, 3.2754898e-02 * 0.98078528040323 / 2.384e-06, 4.752159e-03 * 0.98078528040323 / 2.384e-06, 8.66413e-04 * 0.98078528040323 / 2.384e-06, 6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n  3.815e-06 * 0.98078528040323 / 2.384e-06, -2.718e-05 * 0.98078528040323 / 2.384e-06, 5.22137e-04 * 0.98078528040323 / 2.384e-06, 7.703304e-03 * 0.98078528040323 / 2.384e-06, -2.7815342e-02 * 0.98078528040323 / 2.384e-06, -4.290581e-03 * 0.98078528040323 / 2.384e-06, -6.11782e-04 * 0.98078528040323 / 2.384e-06, -3.7670e-05 * 0.98078528040323 / 2.384e-06, 1.989123673796580e-01, 1.847759065022573e+00, -1.907e-06 * 0.989176509964781 / 2.384e-06, 9.0122e-05 * 0.989176509964781 / 2.384e-06, 2.88486e-04 * 0.989176509964781 / 2.384e-06, -2.774239e-03 * 0.989176509964781 / 2.384e-06, 3.2248020e-02 * 0.989176509964781 / 2.384e-06, 4.748821e-03 * 0.989176509964781 / 2.384e-06, 8.38757e-04 * 0.989176509964781 / 2.384e-06, 5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n  3.338e-06 * 0.989176509964781 / 2.384e-06, -3.9577e-05 * 0.989176509964781 / 2.384e-06, 3.88145e-04 * 0.989176509964781 / 2.384e-06, 6.937027e-03 * 0.989176509964781 / 2.384e-06, -2.8532982e-02 * 0.989176509964781 / 2.384e-06, -4.395962e-03 * 0.989176509964781 / 2.384e-06, -6.46591e-04 * 0.989176509964781 / 2.384e-06, -4.0531e-05 * 0.989176509964781 / 2.384e-06, 1.483359875383474e-01, 1.913880671464418e+00, -1.907e-06 * 0.995184726672197 / 2.384e-06, 8.4400e-05 * 0.995184726672197 / 2.384e-06, 1.91689e-04 * 0.995184726672197 / 2.384e-06, -3.411293e-03 * 0.995184726672197 / 2.384e-06, 3.1706810e-02 * 0.995184726672197 / 2.384e-06, 4.728317e-03 * 0.995184726672197 / 2.384e-06, 8.09669e-04 * 0.995184726672197 / 2.384e-06, 5.579e-05 * 0.995184726672197 / 2.384e-06, 3.338e-06 * 0.995184726672197 / 2.384e-06, -5.0545e-05 * 0.995184726672197 / 2.384e-06, 2.59876e-04 * 0.995184726672197 / 2.384e-06, 6.189346e-03 * 0.995184726672197 / 2.384e-06, -2.9224873e-02 * 0.995184726672197 / 2.384e-06, -4.489899e-03 * 0.995184726672197 / 2.384e-06, -6.80923e-04 * 0.995184726672197 / 2.384e-06, -4.3392e-05 * 0.995184726672197 / 2.384e-06, 9.849140335716425e-02, 1.961570560806461e+00, -2.384e-06 * 0.998795456205172 / 2.384e-06, 7.7724e-05 * 0.998795456205172 / 2.384e-06, 8.8215e-05 * 0.998795456205172 / 2.384e-06, -4.072189e-03 * 0.998795456205172 / 2.384e-06, 3.1132698e-02 * 0.998795456205172 / 2.384e-06, 4.691124e-03 * 0.998795456205172 / 2.384e-06, 7.79152e-04 * 0.998795456205172 / 2.384e-06, 5.2929e-05 * 0.998795456205172 / 2.384e-06, 2.861e-06 * 0.998795456205172 / 2.384e-06, -6.0558e-05 * 0.998795456205172 / 2.384e-06, 1.37329e-04 * 0.998795456205172 / 2.384e-06, 5.462170e-03 * 0.998795456205172 / 2.384e-06, -2.9890060e-02 * 0.998795456205172 / 2.384e-06, -4.570484e-03 * 0.998795456205172 / 2.384e-06, -7.14302e-04 * 0.998795456205172 / 2.384e-06, -4.6253e-05 * 0.998795456205172 / 2.384e-06, 4.912684976946725e-02, 1.990369453344394e+00, 3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06, 1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06, 3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06, 2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06, 9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06, 2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06, 1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06, 1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06, 3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06, 7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06, 4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06, -6.9618e-05 / 2.384e-06 /* 2.384e-06/2.384e-06 */];\n  var NS = 12;\n  var NL = 36;\n  var win = [[2.382191739347913e-13, 6.423305872147834e-13, 9.400849094049688e-13, 1.122435026096556e-12, 1.183840321267481e-12, 1.122435026096556e-12, 9.400849094049690e-13, 6.423305872147839e-13, 2.382191739347918e-13, 5.456116108943412e-12, 4.878985199565852e-12, 4.240448995017367e-12, 3.559909094758252e-12, 2.858043359288075e-12, 2.156177623817898e-12, 1.475637723558783e-12, 8.371015190102974e-13, 2.599706096327376e-13, -5.456116108943412e-12, -4.878985199565852e-12, -4.240448995017367e-12, -3.559909094758252e-12, -2.858043359288076e-12, -2.156177623817898e-12, -1.475637723558783e-12, -8.371015190102975e-13, -2.599706096327376e-13, -2.382191739347923e-13, -6.423305872147843e-13, -9.400849094049696e-13, -1.122435026096556e-12, -1.183840321267481e-12, -1.122435026096556e-12, -9.400849094049694e-13, -6.423305872147840e-13, -2.382191739347918e-13], [2.382191739347913e-13, 6.423305872147834e-13, 9.400849094049688e-13, 1.122435026096556e-12, 1.183840321267481e-12, 1.122435026096556e-12, 9.400849094049688e-13, 6.423305872147841e-13, 2.382191739347918e-13, 5.456116108943413e-12, 4.878985199565852e-12, 4.240448995017367e-12, 3.559909094758253e-12, 2.858043359288075e-12, 2.156177623817898e-12, 1.475637723558782e-12, 8.371015190102975e-13, 2.599706096327376e-13, -5.461314069809755e-12, -4.921085770524055e-12, -4.343405037091838e-12, -3.732668368707687e-12, -3.093523840190885e-12, -2.430835727329465e-12, -1.734679010007751e-12, -9.748253656609281e-13, -2.797435120168326e-13, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -2.283748241799531e-13, -4.037858874020686e-13, -2.146547464825323e-13], [1.316524975873958e-01, /* win[SHORT_TYPE] */\n  4.142135623730950e-01, 7.673269879789602e-01, 1.091308501069271e+00, /* tantab_l */\n  1.303225372841206e+00, 1.569685577117490e+00, 1.920982126971166e+00, 2.414213562373094e+00, 3.171594802363212e+00, 4.510708503662055e+00, 7.595754112725146e+00, 2.290376554843115e+01, 0.98480775301220802032, /* cx */\n  0.64278760968653936292, 0.34202014332566882393, 0.93969262078590842791, -0.17364817766693030343, -0.76604444311897790243, 0.86602540378443870761, 0.500000000000000e+00, -5.144957554275265e-01, /* ca */\n  -4.717319685649723e-01, -3.133774542039019e-01, -1.819131996109812e-01, -9.457419252642064e-02, -4.096558288530405e-02, -1.419856857247115e-02, -3.699974673760037e-03, 8.574929257125442e-01, /* cs */\n  8.817419973177052e-01, 9.496286491027329e-01, 9.833145924917901e-01, 9.955178160675857e-01, 9.991605581781475e-01, 9.998991952444470e-01, 9.999931550702802e-01], [0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 2.283748241799531e-13, 4.037858874020686e-13, 2.146547464825323e-13, 5.461314069809755e-12, 4.921085770524055e-12, 4.343405037091838e-12, 3.732668368707687e-12, 3.093523840190885e-12, 2.430835727329466e-12, 1.734679010007751e-12, 9.748253656609281e-13, 2.797435120168326e-13, -5.456116108943413e-12, -4.878985199565852e-12, -4.240448995017367e-12, -3.559909094758253e-12, -2.858043359288075e-12, -2.156177623817898e-12, -1.475637723558782e-12, -8.371015190102975e-13, -2.599706096327376e-13, -2.382191739347913e-13, -6.423305872147834e-13, -9.400849094049688e-13, -1.122435026096556e-12, -1.183840321267481e-12, -1.122435026096556e-12, -9.400849094049688e-13, -6.423305872147841e-13, -2.382191739347918e-13]];\n  var tantab_l = win[Encoder.SHORT_TYPE];\n  var cx = win[Encoder.SHORT_TYPE];\n  var ca = win[Encoder.SHORT_TYPE];\n  var cs = win[Encoder.SHORT_TYPE];\n\n  /**\n   * new IDCT routine written by Takehiro TOMINAGA\n   *\n   * PURPOSE: Overlapping window on PCM samples<BR>\n   *\n   * SEMANTICS:<BR>\n   * 32 16-bit pcm samples are scaled to fractional 2's complement and\n   * concatenated to the end of the window buffer #x#. The updated window\n   * buffer #x# is then windowed by the analysis window #c# to produce the\n   * windowed sample #z#\n   */\n  var order = [0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29, 2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31];\n\n  /**\n   * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n   */\n  function window_subband(x1, x1Pos, a) {\n    var wp = 10;\n    var x2 = x1Pos + 238 - 14 - 286;\n    for (var i = -15; i < 0; i++) {\n      var w, s, t;\n      w = enwindow[wp + -10];\n      s = x1[x2 + -224] * w;\n      t = x1[x1Pos + 224] * w;\n      w = enwindow[wp + -9];\n      s += x1[x2 + -160] * w;\n      t += x1[x1Pos + 160] * w;\n      w = enwindow[wp + -8];\n      s += x1[x2 + -96] * w;\n      t += x1[x1Pos + 96] * w;\n      w = enwindow[wp + -7];\n      s += x1[x2 + -32] * w;\n      t += x1[x1Pos + 32] * w;\n      w = enwindow[wp + -6];\n      s += x1[x2 + 32] * w;\n      t += x1[x1Pos + -32] * w;\n      w = enwindow[wp + -5];\n      s += x1[x2 + 96] * w;\n      t += x1[x1Pos + -96] * w;\n      w = enwindow[wp + -4];\n      s += x1[x2 + 160] * w;\n      t += x1[x1Pos + -160] * w;\n      w = enwindow[wp + -3];\n      s += x1[x2 + 224] * w;\n      t += x1[x1Pos + -224] * w;\n      w = enwindow[wp + -2];\n      s += x1[x1Pos + -256] * w;\n      t -= x1[x2 + 256] * w;\n      w = enwindow[wp + -1];\n      s += x1[x1Pos + -192] * w;\n      t -= x1[x2 + 192] * w;\n      w = enwindow[wp + 0];\n      s += x1[x1Pos + -128] * w;\n      t -= x1[x2 + 128] * w;\n      w = enwindow[wp + 1];\n      s += x1[x1Pos + -64] * w;\n      t -= x1[x2 + 64] * w;\n      w = enwindow[wp + 2];\n      s += x1[x1Pos + 0] * w;\n      t -= x1[x2 + 0] * w;\n      w = enwindow[wp + 3];\n      s += x1[x1Pos + 64] * w;\n      t -= x1[x2 + -64] * w;\n      w = enwindow[wp + 4];\n      s += x1[x1Pos + 128] * w;\n      t -= x1[x2 + -128] * w;\n      w = enwindow[wp + 5];\n      s += x1[x1Pos + 192] * w;\n      t -= x1[x2 + -192] * w;\n\n      /*\n       * this multiplyer could be removed, but it needs more 256 FLOAT\n       * data. thinking about the data cache performance, I think we\n       * should not use such a huge table. tt 2000/Oct/25\n       */\n      s *= enwindow[wp + 6];\n      w = t - s;\n      a[30 + i * 2] = t + s;\n      a[31 + i * 2] = enwindow[wp + 7] * w;\n      wp += 18;\n      x1Pos--;\n      x2++;\n    }\n    {\n      var s, t, u, v;\n      t = x1[x1Pos + -16] * enwindow[wp + -10];\n      s = x1[x1Pos + -32] * enwindow[wp + -2];\n      t += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n      s += x1[x1Pos + -96] * enwindow[wp + -1];\n      t += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n      s += x1[x1Pos + -160] * enwindow[wp + 0];\n      t += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n      s += x1[x1Pos + -224] * enwindow[wp + 1];\n      t += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n      s -= x1[x1Pos + 32] * enwindow[wp + 2];\n      t += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n      s -= x1[x1Pos + 96] * enwindow[wp + 3];\n      t += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n      s -= x1[x1Pos + 160] * enwindow[wp + 4];\n      t += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n      s -= x1[x1Pos + 224];\n      u = s - t;\n      v = s + t;\n      t = a[14];\n      s = a[15] - t;\n      a[31] = v + t; /* A0 */\n      a[30] = u + s; /* A1 */\n      a[15] = u - s; /* A2 */\n      a[14] = v - t; /* A3 */\n    }\n    {\n      var xr;\n      xr = a[28] - a[0];\n      a[0] += a[28];\n      a[28] = xr * enwindow[wp + -2 * 18 + 7];\n      xr = a[29] - a[1];\n      a[1] += a[29];\n      a[29] = xr * enwindow[wp + -2 * 18 + 7];\n      xr = a[26] - a[2];\n      a[2] += a[26];\n      a[26] = xr * enwindow[wp + -4 * 18 + 7];\n      xr = a[27] - a[3];\n      a[3] += a[27];\n      a[27] = xr * enwindow[wp + -4 * 18 + 7];\n      xr = a[24] - a[4];\n      a[4] += a[24];\n      a[24] = xr * enwindow[wp + -6 * 18 + 7];\n      xr = a[25] - a[5];\n      a[5] += a[25];\n      a[25] = xr * enwindow[wp + -6 * 18 + 7];\n      xr = a[22] - a[6];\n      a[6] += a[22];\n      a[22] = xr * Util.SQRT2;\n      xr = a[23] - a[7];\n      a[7] += a[23];\n      a[23] = xr * Util.SQRT2 - a[7];\n      a[7] -= a[6];\n      a[22] -= a[7];\n      a[23] -= a[22];\n      xr = a[6];\n      a[6] = a[31] - xr;\n      a[31] = a[31] + xr;\n      xr = a[7];\n      a[7] = a[30] - xr;\n      a[30] = a[30] + xr;\n      xr = a[22];\n      a[22] = a[15] - xr;\n      a[15] = a[15] + xr;\n      xr = a[23];\n      a[23] = a[14] - xr;\n      a[14] = a[14] + xr;\n      xr = a[20] - a[8];\n      a[8] += a[20];\n      a[20] = xr * enwindow[wp + -10 * 18 + 7];\n      xr = a[21] - a[9];\n      a[9] += a[21];\n      a[21] = xr * enwindow[wp + -10 * 18 + 7];\n      xr = a[18] - a[10];\n      a[10] += a[18];\n      a[18] = xr * enwindow[wp + -12 * 18 + 7];\n      xr = a[19] - a[11];\n      a[11] += a[19];\n      a[19] = xr * enwindow[wp + -12 * 18 + 7];\n      xr = a[16] - a[12];\n      a[12] += a[16];\n      a[16] = xr * enwindow[wp + -14 * 18 + 7];\n      xr = a[17] - a[13];\n      a[13] += a[17];\n      a[17] = xr * enwindow[wp + -14 * 18 + 7];\n      xr = -a[20] + a[24];\n      a[20] += a[24];\n      a[24] = xr * enwindow[wp + -12 * 18 + 7];\n      xr = -a[21] + a[25];\n      a[21] += a[25];\n      a[25] = xr * enwindow[wp + -12 * 18 + 7];\n      xr = a[4] - a[8];\n      a[4] += a[8];\n      a[8] = xr * enwindow[wp + -12 * 18 + 7];\n      xr = a[5] - a[9];\n      a[5] += a[9];\n      a[9] = xr * enwindow[wp + -12 * 18 + 7];\n      xr = a[0] - a[12];\n      a[0] += a[12];\n      a[12] = xr * enwindow[wp + -4 * 18 + 7];\n      xr = a[1] - a[13];\n      a[1] += a[13];\n      a[13] = xr * enwindow[wp + -4 * 18 + 7];\n      xr = a[16] - a[28];\n      a[16] += a[28];\n      a[28] = xr * enwindow[wp + -4 * 18 + 7];\n      xr = -a[17] + a[29];\n      a[17] += a[29];\n      a[29] = xr * enwindow[wp + -4 * 18 + 7];\n      xr = Util.SQRT2 * (a[2] - a[10]);\n      a[2] += a[10];\n      a[10] = xr;\n      xr = Util.SQRT2 * (a[3] - a[11]);\n      a[3] += a[11];\n      a[11] = xr;\n      xr = Util.SQRT2 * (-a[18] + a[26]);\n      a[18] += a[26];\n      a[26] = xr - a[18];\n      xr = Util.SQRT2 * (-a[19] + a[27]);\n      a[19] += a[27];\n      a[27] = xr - a[19];\n      xr = a[2];\n      a[19] -= a[3];\n      a[3] -= xr;\n      a[2] = a[31] - xr;\n      a[31] += xr;\n      xr = a[3];\n      a[11] -= a[19];\n      a[18] -= xr;\n      a[3] = a[30] - xr;\n      a[30] += xr;\n      xr = a[18];\n      a[27] -= a[11];\n      a[19] -= xr;\n      a[18] = a[15] - xr;\n      a[15] += xr;\n      xr = a[19];\n      a[10] -= xr;\n      a[19] = a[14] - xr;\n      a[14] += xr;\n      xr = a[10];\n      a[11] -= xr;\n      a[10] = a[23] - xr;\n      a[23] += xr;\n      xr = a[11];\n      a[26] -= xr;\n      a[11] = a[22] - xr;\n      a[22] += xr;\n      xr = a[26];\n      a[27] -= xr;\n      a[26] = a[7] - xr;\n      a[7] += xr;\n      xr = a[27];\n      a[27] = a[6] - xr;\n      a[6] += xr;\n      xr = Util.SQRT2 * (a[0] - a[4]);\n      a[0] += a[4];\n      a[4] = xr;\n      xr = Util.SQRT2 * (a[1] - a[5]);\n      a[1] += a[5];\n      a[5] = xr;\n      xr = Util.SQRT2 * (a[16] - a[20]);\n      a[16] += a[20];\n      a[20] = xr;\n      xr = Util.SQRT2 * (a[17] - a[21]);\n      a[17] += a[21];\n      a[21] = xr;\n      xr = -Util.SQRT2 * (a[8] - a[12]);\n      a[8] += a[12];\n      a[12] = xr - a[8];\n      xr = -Util.SQRT2 * (a[9] - a[13]);\n      a[9] += a[13];\n      a[13] = xr - a[9];\n      xr = -Util.SQRT2 * (a[25] - a[29]);\n      a[25] += a[29];\n      a[29] = xr - a[25];\n      xr = -Util.SQRT2 * (a[24] + a[28]);\n      a[24] -= a[28];\n      a[28] = xr - a[24];\n      xr = a[24] - a[16];\n      a[24] = xr;\n      xr = a[20] - xr;\n      a[20] = xr;\n      xr = a[28] - xr;\n      a[28] = xr;\n      xr = a[25] - a[17];\n      a[25] = xr;\n      xr = a[21] - xr;\n      a[21] = xr;\n      xr = a[29] - xr;\n      a[29] = xr;\n      xr = a[17] - a[1];\n      a[17] = xr;\n      xr = a[9] - xr;\n      a[9] = xr;\n      xr = a[25] - xr;\n      a[25] = xr;\n      xr = a[5] - xr;\n      a[5] = xr;\n      xr = a[21] - xr;\n      a[21] = xr;\n      xr = a[13] - xr;\n      a[13] = xr;\n      xr = a[29] - xr;\n      a[29] = xr;\n      xr = a[1] - a[0];\n      a[1] = xr;\n      xr = a[16] - xr;\n      a[16] = xr;\n      xr = a[17] - xr;\n      a[17] = xr;\n      xr = a[8] - xr;\n      a[8] = xr;\n      xr = a[9] - xr;\n      a[9] = xr;\n      xr = a[24] - xr;\n      a[24] = xr;\n      xr = a[25] - xr;\n      a[25] = xr;\n      xr = a[4] - xr;\n      a[4] = xr;\n      xr = a[5] - xr;\n      a[5] = xr;\n      xr = a[20] - xr;\n      a[20] = xr;\n      xr = a[21] - xr;\n      a[21] = xr;\n      xr = a[12] - xr;\n      a[12] = xr;\n      xr = a[13] - xr;\n      a[13] = xr;\n      xr = a[28] - xr;\n      a[28] = xr;\n      xr = a[29] - xr;\n      a[29] = xr;\n      xr = a[0];\n      a[0] += a[31];\n      a[31] -= xr;\n      xr = a[1];\n      a[1] += a[30];\n      a[30] -= xr;\n      xr = a[16];\n      a[16] += a[15];\n      a[15] -= xr;\n      xr = a[17];\n      a[17] += a[14];\n      a[14] -= xr;\n      xr = a[8];\n      a[8] += a[23];\n      a[23] -= xr;\n      xr = a[9];\n      a[9] += a[22];\n      a[22] -= xr;\n      xr = a[24];\n      a[24] += a[7];\n      a[7] -= xr;\n      xr = a[25];\n      a[25] += a[6];\n      a[6] -= xr;\n      xr = a[4];\n      a[4] += a[27];\n      a[27] -= xr;\n      xr = a[5];\n      a[5] += a[26];\n      a[26] -= xr;\n      xr = a[20];\n      a[20] += a[11];\n      a[11] -= xr;\n      xr = a[21];\n      a[21] += a[10];\n      a[10] -= xr;\n      xr = a[12];\n      a[12] += a[19];\n      a[19] -= xr;\n      xr = a[13];\n      a[13] += a[18];\n      a[18] -= xr;\n      xr = a[28];\n      a[28] += a[3];\n      a[3] -= xr;\n      xr = a[29];\n      a[29] += a[2];\n      a[2] -= xr;\n    }\n  }\n\n  /**\n   * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n   * there are 36 coefficents in the time domain and 18 in the frequency\n   * domain.<BR>\n   * In the case of short blocks (type 2) there are 3 transformations with\n   * short length. This leads to 12 coefficents in the time and 6 in the\n   * frequency domain. In this case the results are stored side by side in the\n   * vector out[].\n   *\n   * New layer3\n   */\n  function mdct_short(inout, inoutPos) {\n    for (var l = 0; l < 3; l++) {\n      var tc0, tc1, tc2, ts0, ts1, ts2;\n      ts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0] - inout[inoutPos + 5 * 3];\n      tc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2] - inout[inoutPos + 3 * 3];\n      tc1 = ts0 + tc0;\n      tc2 = ts0 - tc0;\n      ts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0] + inout[inoutPos + 2 * 3];\n      tc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2] + inout[inoutPos + 0 * 3];\n      ts1 = ts0 + tc0;\n      ts2 = -ts0 + tc0;\n      tc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n      /*\n       * tritab_s [ 1 ]\n       */\n      ts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n      /*\n       * tritab_s [ 1 ]\n       */\n      inout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n      /*\n       * tritab_s[ 2 ]\n       */\n      inout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n      /*\n       * tritab_s[0 ]\n       */\n      tc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n      /*\n       * tritab_s[ 2]\n       */\n      ts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n      inout[inoutPos + 3 * 1] = tc2 - ts1;\n      inout[inoutPos + 3 * 2] = tc2 + ts1;\n      tc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n      ts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n      /*\n       * tritab_s[ 0]\n       */\n      inout[inoutPos + 3 * 3] = tc1 + ts2;\n      inout[inoutPos + 3 * 4] = tc1 - ts2;\n      inoutPos++;\n    }\n  }\n  function mdct_long(out, outPos, _in) {\n    var ct, st;\n    {\n      var tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n      /* 1,2, 5,6, 9,10, 13,14, 17 */\n      tc1 = _in[17] - _in[9];\n      tc3 = _in[15] - _in[11];\n      tc4 = _in[14] - _in[12];\n      ts5 = _in[0] + _in[8];\n      ts6 = _in[1] + _in[7];\n      ts7 = _in[2] + _in[6];\n      ts8 = _in[3] + _in[5];\n      out[outPos + 17] = ts5 + ts7 - ts8 - (ts6 - _in[4]);\n      st = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n      ct = (tc1 - tc3 - tc4) * cx[12 + 6];\n      out[outPos + 5] = ct + st;\n      out[outPos + 6] = ct - st;\n      tc2 = (_in[16] - _in[10]) * cx[12 + 6];\n      ts6 = ts6 * cx[12 + 7] + _in[4];\n      ct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n      st = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n      out[outPos + 1] = ct + st;\n      out[outPos + 2] = ct - st;\n      ct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n      st = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n      out[outPos + 9] = ct + st;\n      out[outPos + 10] = ct - st;\n      ct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n      st = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n      out[outPos + 13] = ct + st;\n      out[outPos + 14] = ct - st;\n    }\n    {\n      var ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n      ts1 = _in[8] - _in[0];\n      ts3 = _in[6] - _in[2];\n      ts4 = _in[5] - _in[3];\n      tc5 = _in[17] + _in[9];\n      tc6 = _in[16] + _in[10];\n      tc7 = _in[15] + _in[11];\n      tc8 = _in[14] + _in[12];\n      out[outPos + 0] = tc5 + tc7 + tc8 + (tc6 + _in[13]);\n      ct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n      st = (ts1 - ts3 + ts4) * cx[12 + 6];\n      out[outPos + 11] = ct + st;\n      out[outPos + 12] = ct - st;\n      ts2 = (_in[7] - _in[1]) * cx[12 + 6];\n      tc6 = _in[13] - tc6 * cx[12 + 7];\n      ct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n      st = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n      out[outPos + 3] = ct + st;\n      out[outPos + 4] = ct - st;\n      ct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n      st = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n      out[outPos + 7] = ct + st;\n      out[outPos + 8] = ct - st;\n      ct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n      st = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n      out[outPos + 15] = ct + st;\n      out[outPos + 16] = ct - st;\n    }\n  }\n  this.mdct_sub48 = function (gfc, w0, w1) {\n    var wk = w0;\n    var wkPos = 286;\n    /* thinking cache performance, ch->gr loop is better than gr->ch loop */\n    for (var ch = 0; ch < gfc.channels_out; ch++) {\n      for (var gr = 0; gr < gfc.mode_gr; gr++) {\n        var band;\n        var gi = gfc.l3_side.tt[gr][ch];\n        var mdct_enc = gi.xr;\n        var mdct_encPos = 0;\n        var samp = gfc.sb_sample[ch][1 - gr];\n        var sampPos = 0;\n        for (var k = 0; k < 18 / 2; k++) {\n          window_subband(wk, wkPos, samp[sampPos]);\n          window_subband(wk, wkPos + 32, samp[sampPos + 1]);\n          sampPos += 2;\n          wkPos += 64;\n          /*\n           * Compensate for inversion in the analysis filter\n           */\n          for (band = 1; band < 32; band += 2) {\n            samp[sampPos - 1][band] *= -1;\n          }\n        }\n\n        /*\n         * Perform imdct of 18 previous subband samples + 18 current\n         * subband samples\n         */\n        for (band = 0; band < 32; band++, mdct_encPos += 18) {\n          var type = gi.block_type;\n          var band0 = gfc.sb_sample[ch][gr];\n          var band1 = gfc.sb_sample[ch][1 - gr];\n          if (gi.mixed_block_flag != 0 && band < 2) type = 0;\n          if (gfc.amp_filter[band] < 1e-12) {\n            Arrays.fill(mdct_enc, mdct_encPos + 0, mdct_encPos + 18, 0);\n          } else {\n            if (gfc.amp_filter[band] < 1.0) {\n              for (var k = 0; k < 18; k++) band1[k][order[band]] *= gfc.amp_filter[band];\n            }\n            if (type == Encoder.SHORT_TYPE) {\n              for (var k = -NS / 4; k < 0; k++) {\n                var w = win[Encoder.SHORT_TYPE][k + 3];\n                mdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]] * w - band0[8 - k][order[band]];\n                mdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]] * w + band0[15 + k][order[band]];\n                mdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]] * w - band0[14 - k][order[band]];\n                mdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]] * w + band1[3 + k][order[band]];\n                mdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]] * w - band1[2 - k][order[band]];\n                mdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]] * w + band1[9 + k][order[band]];\n              }\n              mdct_short(mdct_enc, mdct_encPos);\n            } else {\n              var work = new_float(18);\n              for (var k = -NL / 4; k < 0; k++) {\n                var a, b;\n                a = win[type][k + 27] * band1[k + 9][order[band]] + win[type][k + 36] * band1[8 - k][order[band]];\n                b = win[type][k + 9] * band0[k + 9][order[band]] - win[type][k + 18] * band0[8 - k][order[band]];\n                work[k + 9] = a - b * tantab_l[3 + k + 9];\n                work[k + 18] = a * tantab_l[3 + k + 9] + b;\n              }\n              mdct_long(mdct_enc, mdct_encPos, work);\n            }\n          }\n          /*\n           * Perform aliasing reduction butterfly\n           */\n          if (type != Encoder.SHORT_TYPE && band != 0) {\n            for (var k = 7; k >= 0; --k) {\n              var bu, bd;\n              bu = mdct_enc[mdct_encPos + k] * ca[20 + k] + mdct_enc[mdct_encPos + -1 - k] * cs[28 + k];\n              bd = mdct_enc[mdct_encPos + k] * cs[28 + k] - mdct_enc[mdct_encPos + -1 - k] * ca[20 + k];\n              mdct_enc[mdct_encPos + -1 - k] = bu;\n              mdct_enc[mdct_encPos + k] = bd;\n            }\n          }\n        }\n      }\n      wk = w1;\n      wkPos = 286;\n      if (gfc.mode_gr == 1) {\n        for (var i = 0; i < 18; i++) {\n          System.arraycopy(gfc.sb_sample[ch][1][i], 0, gfc.sb_sample[ch][0][i], 0, 32);\n        }\n      }\n    }\n  };\n}\nmodule.exports = NewMDCT;","map":{"version":3,"names":["common","require","System","VbrMode","Float","ShortBlock","Util","Arrays","new_array_n","new_byte","new_double","new_float","new_float_n","new_int","new_int_n","assert","Encoder","NewMDCT","enwindow","SQRT2","NS","NL","win","tantab_l","SHORT_TYPE","cx","ca","cs","order","window_subband","x1","x1Pos","a","wp","x2","i","w","s","t","u","v","xr","mdct_short","inout","inoutPos","l","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","out","outPos","_in","ct","st","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","mdct_sub48","gfc","w0","w1","wk","wkPos","ch","channels_out","gr","mode_gr","band","gi","l3_side","tt","mdct_enc","mdct_encPos","samp","sb_sample","sampPos","k","type","block_type","band0","band1","mixed_block_flag","amp_filter","fill","work","b","bu","bd","arraycopy","module","exports"],"sources":["D:/代码/vscodeProjects/AiEducation/vue_aieducation/node_modules/lamejs/src/js/NewMDCT.js"],"sourcesContent":["/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder.SHORT_TYPE];\n\tvar cx = win[Encoder.SHORT_TYPE];\n\tvar ca = win[Encoder.SHORT_TYPE];\n\tvar cs = win[Encoder.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = NewMDCT;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}