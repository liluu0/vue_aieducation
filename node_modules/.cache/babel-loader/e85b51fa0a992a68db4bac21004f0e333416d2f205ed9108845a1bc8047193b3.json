{"ast":null,"code":"import '@wangeditor/editor/dist/css/style.css'; // 引入 css\nimport { onBeforeUnmount, ref, shallowRef, onMounted } from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nexport default {\n  components: {\n    Editor,\n    Toolbar\n  },\n  setup() {\n    // 编辑器实例，必须用 shallowRef\n    const editorRef = shallowRef();\n    // 内容 HTML\n    const valueHtml = ref(\"<p>开始编辑<p>\");\n    let articleId = null;\n    let updatatime = null;\n    // 模拟 ajax 异步获取内容\n    onMounted(() => {\n      handleEdit();\n    });\n    const editorConfig = {\n      MENU_CONF: {}\n    };\n    const toolbarConfig = {};\n    editorConfig.MENU_CONF['uploadImage'] = {\n      server: 'http://localhost:8088/travelhelper/file/uploadTest',\n      uploadImgMaxSize: 30 * 1024 * 1024\n      // 上传图片的配置\n    };\n    // 组件销毁时，也及时销毁编辑器\n    onBeforeUnmount(() => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n      editor.destroy();\n    });\n    const handleCreated = editor => {\n      editorRef.value = editor; // 记录 editor 实例，重要！\n    };\n\n    // 提交函数\n    const submit = () => {\n      //       const data = {arId: articleId,\n      //                     content: valueHtml.value,\n      //                     time: updatatime\n      // \t  }\n      //     reqSubmit(data).then(response => {\n      //       Message({\n      //       message: '提交成功',\n      //       type: 'success'\n      //     })\n      //     // 处理服务器返回的响应\n      //     handleEdit()\n      //   })\n      //   .catch(error => {\n      //     console.error('提交失败：', error)\n      //     // 处理错误\n      //   })\n    };\n\n    // 修改函数\n    const handleEdit = async () => {\n\n      //   try {    \n      //              // 请求成功处理逻辑\n      //       await reqText().then(response => {\n      //       console.log(response.data.content)\n      //       // 处理服务器返回的响应\n      //         valueHtml.value=response.data.data.content;\n      //       articleId=response.data.data.arId\n      //       updatatime=response.data.data.time\n      //     })\n      //     .catch(error => {\n      //       console.error('提交失败：', error)\n      //       // 处理错误\n      //     })\n\n      //   } catch (error) {\n      //     console.error('修改文章错误:', error);\n      //   }\n\n      // 设置编辑器内容为新的内容\n    };\n    return {\n      editorRef,\n      valueHtml,\n      mode: 'default',\n      // 或 'simple'\n      toolbarConfig,\n      editorConfig,\n      handleCreated,\n      submit,\n      handleEdit\n    };\n  }\n};","map":{"version":3,"names":["onBeforeUnmount","ref","shallowRef","onMounted","Editor","Toolbar","components","setup","editorRef","valueHtml","articleId","updatatime","handleEdit","editorConfig","MENU_CONF","toolbarConfig","server","uploadImgMaxSize","editor","value","destroy","handleCreated","submit","mode"],"sources":["D:\\代码\\vscodeProjects\\AiEducation\\vue_aieducation\\src\\pages\\Class\\discuss\\discussAll\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"discussAll\">\r\n\r\n  <div class=\"discussArea\">\r\n    <div class=\"btn_group\" tabindex=\"-1\" aria-hidden=\"true\">\r\n            <div class=\"search-box\">\r\n                      <el-input placeholder=\"请输入内容\" \r\n                      v-model=\"input\" \r\n                      prefix-icon=\"el-icon-search\"\r\n                      clearable> </el-input>\r\n            </div> \r\n            \r\n       <el-button @click=\"addClass\" type=\"primary\" plain round> + 添加讨论</el-button>\r\n    </div>\r\n\r\n    <div class=\"alltopic clearfix\">\r\n    <ul class=\"breadcrumb\">\r\n        <li class=\"active\">\r\n            <span>共<b>13</b>条话题</span>\r\n        </li>\r\n    </ul>\r\n    </div>\r\n    \r\n\t\r\n\t<div class=\"dataCon\">\r\n\t\t<div v-if=\"true\" class=\"dataCon_empty\" style=\"\">\r\n\t\t\t<span>本课程还没有话题哦，快去发布一个吧～</span>\r\n\t\t</div>\r\n\t\t<div v-else>\r\n\t\t\taa\r\n\t\t</div>\r\n\r\n\t</div>\r\n  </div>\r\n  \r\n  <!-- 背景margin -->\r\n  <div class=\"bgmargin\">\r\n  </div>\r\n\t\t\t\r\n  <div>\r\n\r\n    <div class=\"editContainer\">\r\n\t\t<div class=\"edit_headTitle\">新建话题</div> \r\n\t\t<div class=\"edit_main\">\r\n\t\t\t<div class=\"edit_target\">\r\n\t\t\t\t<span class=\"fl\">发布给</span> \r\n\t\t\t\t<div class=\"fl selectClass-disabled\">\r\n\t\t\t\t\t<b class=\"color000\">2022软件1班</b>\r\n\t\t\t\t</div>\r\n\t\t\t</div> \r\n\t\t\t<div class=\"edit_title\">\r\n\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"请输入标题\" autocomplete=\"off\">\r\n\t\t\t\t<div class=\"deit_content\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div style=\"border: 1px solid #ccc\">\r\n\t\t\t\t\t\t<Toolbar\r\n\t\t\t\t\t\tstyle=\"border-bottom: 1px solid #ccc\"\r\n\t\t\t\t\t\t:editor=\"editorRef\"\r\n\t\t\t\t\t\t:defaultConfig=\"toolbarConfig\"\r\n\t\t\t\t\t\t:mode=\"mode\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\tclass=\"editor\"\r\n\t\t\t\t\t\tstyle=\"height: 500px; overflow-y: hidden;\"\r\n\t\t\t\t\t\tv-model=\"valueHtml\"\r\n\t\t\t\t\t\t:defaultConfig=\"editorConfig\"\r\n\t\t\t\t\t\t:mode=\"mode\"\r\n\t\t\t\t\t\t@onCreated=\"handleCreated\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br>\r\n\t\t\t\t\t<button @click=\"submit\" class=\"submit-button\">提交</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '@wangeditor/editor/dist/css/style.css' // 引入 css\r\nimport { onBeforeUnmount, ref, shallowRef, onMounted } from 'vue'\r\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue'\r\nexport default {\r\n\tcomponents: { Editor, Toolbar },\r\n  setup() {\r\n    // 编辑器实例，必须用 shallowRef\r\n    const editorRef = shallowRef()\r\n    // 内容 HTML\r\n    const valueHtml = ref(\"<p>开始编辑<p>\")\r\n    let articleId=null\r\n    let updatatime=null\r\n    // 模拟 ajax 异步获取内容\r\n    onMounted(() => {\r\n      \r\n         handleEdit()\r\n    \r\n    })\r\n    const editorConfig = {\r\n      MENU_CONF: {}\r\n    }\r\n   \r\n    const toolbarConfig = {}\r\n    editorConfig.MENU_CONF['uploadImage'] = {\r\n      server: 'http://localhost:8088/travelhelper/file/uploadTest',\r\n      uploadImgMaxSize: 30 * 1024 * 1024\r\n      // 上传图片的配置\r\n    }\r\n    // 组件销毁时，也及时销毁编辑器\r\n    onBeforeUnmount(() => {\r\n      const editor = editorRef.value\r\n      if (editor == null) return\r\n      editor.destroy()\r\n    })\r\n    const handleCreated = (editor) => {\r\n      editorRef.value = editor // 记录 editor 实例，重要！\r\n    }\r\n\r\n    // 提交函数\r\n    const submit = () => {\r\n//       const data = {arId: articleId,\r\n//                     content: valueHtml.value,\r\n//                     time: updatatime\r\n// \t  }\r\n//     reqSubmit(data).then(response => {\r\n//       Message({\r\n//       message: '提交成功',\r\n//       type: 'success'\r\n//     })\r\n//     // 处理服务器返回的响应\r\n//     handleEdit()\r\n//   })\r\n//   .catch(error => {\r\n//     console.error('提交失败：', error)\r\n//     // 处理错误\r\n//   })\r\n\r\n    }\r\n\r\n    // 修改函数\r\n    const handleEdit = async () => {\r\n\r\n    //   try {    \r\n    //              // 请求成功处理逻辑\r\n    //       await reqText().then(response => {\r\n    //       console.log(response.data.content)\r\n    //       // 处理服务器返回的响应\r\n    //         valueHtml.value=response.data.data.content;\r\n    //       articleId=response.data.data.arId\r\n    //       updatatime=response.data.data.time\r\n    //     })\r\n    //     .catch(error => {\r\n    //       console.error('提交失败：', error)\r\n    //       // 处理错误\r\n    //     })\r\n\r\n    //   } catch (error) {\r\n    //     console.error('修改文章错误:', error);\r\n    //   }\r\n      \r\n      // 设置编辑器内容为新的内容\r\n\r\n    }\r\n    return {\r\n      editorRef,\r\n      valueHtml,\r\n      mode: 'default', // 或 'simple'\r\n      toolbarConfig,\r\n      editorConfig,\r\n      handleCreated,\r\n      submit,\r\n      handleEdit\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.deit_content {\r\n background-color: red;\r\n}\r\n.fl {\r\n    float: left;\r\n}\r\n.color000 {\r\n\tcolor: #000;\r\n}\r\n/* 新建讨论 */\r\n.editContainer {\r\n    position: relative;\r\n    padding: 30px 30px 40px;\r\n    min-height: 500px;\r\n}\r\n.editContainer .edit_headTitle {\r\n    font-size: 18px;\r\n    color: #131B26;\r\n    font-weight: bold;\r\n    line-height: 28px;\r\n    padding-bottom: 20px;\r\n}\r\n.editContainer .edit_target {\r\n\theight: 30px;\r\n\tline-height: 30px;\r\n\tmargin-bottom: 10px;\r\n\tfont-size: 14px;\r\n\tcolor: #8A8B99;\r\n}\r\n.editContainer .edit_target .selectClass-disabled {\r\n\tmargin-left: 14px;\r\n    font-size: 14px;\r\n}\r\n.editContainer .edit_title {\r\n\tbackground: #fff;\r\n\tmargin-bottom: 15px;\r\n}\r\n.editContainer .edit_title input {\r\n    display: block;\r\n    width: 100%;\r\n    height: 42px;\r\n    padding: 0 14px;\r\n    font-size: 14px;\r\n    border: 1px solid #D5D7D9;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    caret-color: #3A8BFF;\r\n\tmargin: 15px 0;\r\n}\r\n\r\n/* 分界 */\r\n.clearfix:after {\r\n    content: \" \";\r\n    display: block;\r\n    height: 0px;\r\n    clear: both;\r\n}\r\n\r\nul, ol, li {\r\n    list-style-type: none;\r\n}\r\n.alltopic {\r\n\tborder-bottom: 2px solid #dcdfe6;\r\n    padding-bottom: 10px;\r\n}\r\n.alltopic .breadcrumb {\r\n    float: left;\r\n    max-width: 60%;\r\n}\r\n.breadcrumb {\r\n    width: 100%;\r\n    padding: 15px 0 0 10px;\r\n    box-sizing: border-box;\r\n}\r\n.breadcrumb>li.active {\r\n    color: #8A8B99;\r\n}\r\n.btn_group::after {\r\ncontent: \"\";\r\ndisplay: block;\r\nclear:both;\r\n}\r\n.search-box {\r\n            cursor: pointer;\r\n            transition: all 0.3s ease;\r\n            padding: 0;\r\n            float: left;\r\n}\r\n.el-input__inner {\r\n    border-radius: 20px;\r\n    border: 2px solid #dcdfe6;\r\n    width: 287px;\r\n}\r\n.el-button--small, .el-button--small.is-round {\r\n    padding: 0;\r\n    width: 104px;\r\n    height: 36px;\r\n    float: right;\r\n    margin-left: 30px;\r\n}\r\n\r\n/* 话题 */\r\n.dataCon {\r\n    /* position: relative; */\r\n\tmin-height: 360px;\r\n}\r\n.dataCon_empty {\r\n    height: 180px;\r\n    font-size: 14px;\r\n    color: #a8a8b3;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 26%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n.dataCon_empty span {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n}\r\n.bgmargin {\r\n\theight: 20px;\r\n\tbackground-color: #efefef;\r\n\twidth: 105%;\r\n    margin-left: -30px;\r\n}\r\n</style>"],"mappings":"AAoFA,OAAO,uCAAsC,EAAE;AAC/C,SAASA,eAAe,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAQ,QAAS,KAAI;AAChE,SAASC,MAAM,EAAEC,OAAM,QAAS,4BAA2B;AAC3D,eAAe;EACdC,UAAU,EAAE;IAAEF,MAAM;IAAEC;EAAQ,CAAC;EAC9BE,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,SAAQ,GAAIN,UAAU,CAAC;IAC7B;IACA,MAAMO,SAAQ,GAAIR,GAAG,CAAC,YAAY;IAClC,IAAIS,SAAS,GAAC,IAAG;IACjB,IAAIC,UAAU,GAAC,IAAG;IAClB;IACAR,SAAS,CAAC,MAAM;MAEXS,UAAU,CAAC;IAEhB,CAAC;IACD,MAAMC,YAAW,GAAI;MACnBC,SAAS,EAAE,CAAC;IACd;IAEA,MAAMC,aAAY,GAAI,CAAC;IACvBF,YAAY,CAACC,SAAS,CAAC,aAAa,IAAI;MACtCE,MAAM,EAAE,oDAAoD;MAC5DC,gBAAgB,EAAE,EAAC,GAAI,IAAG,GAAI;MAC9B;IACF;IACA;IACAjB,eAAe,CAAC,MAAM;MACpB,MAAMkB,MAAK,GAAIV,SAAS,CAACW,KAAI;MAC7B,IAAID,MAAK,IAAK,IAAI,EAAE;MACpBA,MAAM,CAACE,OAAO,CAAC;IACjB,CAAC;IACD,MAAMC,aAAY,GAAKH,MAAM,IAAK;MAChCV,SAAS,CAACW,KAAI,GAAID,MAAK,EAAE;IAC3B;;IAEA;IACA,MAAMI,MAAK,GAAIA,CAAA,KAAM;MACzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CAEI;;IAEA;IACA,MAAMV,UAAS,GAAI,MAAAA,CAAA,KAAY;;MAE/B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEE;IAAA,CAEF;IACA,OAAO;MACLJ,SAAS;MACTC,SAAS;MACTc,IAAI,EAAE,SAAS;MAAE;MACjBR,aAAa;MACbF,YAAY;MACZQ,aAAa;MACbC,MAAM;MACNV;IACF;EACF;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}