{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode } from \"vue\";\nimport _imports_0 from '@/assets/img/robot04.gif';\nimport _imports_1 from '@/assets/img/voiceImg.jpg';\nimport _imports_2 from '@/assets/img/send.jpg';\nconst _hoisted_1 = {\n  class: \"chat-com-content-wrap\"\n};\nconst _hoisted_2 = {\n  class: \"content-header\"\n};\nconst _hoisted_3 = {\n  class: \"chat-content\"\n};\nconst _hoisted_4 = {\n  class: \"chandler-content_main-board\"\n};\nconst _hoisted_5 = {\n  class: \"chandler-ext-content_communication-wrap\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"chatbox\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"boctx-wrap-introduce\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"introduceleft\\\"><h2 class=\\\"max-w-500px\\\">我是你的心理陪聊助手</h2><br><div class=\\\"desc max-w-500px\\\"> 我拥有很多神奇的能力哦~<br></div><div class=\\\"ctrl\\\"><ul><li>我可以陪你聊天，倾听你的心声</li><li>我可以为你解答疑惑，帮助你学习</li><li>我可以帮你排解压力、减轻焦虑</li><li class=\\\"desc max-w-500px\\\">快来和我聊天吧~</li></ul></div></div><div class=\\\"introduceright\\\"><img class=\\\"robotImg\\\" src=\\\"\" + _imports_0 + \"\\\"></div>\", 2);\nconst _hoisted_10 = [_hoisted_8];\nconst _hoisted_11 = {\n  key: 1,\n  class: \"boctx-wrap-introduce\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"introduceleft\\\"><h2 class=\\\"max-w-500px\\\">我是你的智能画图助手</h2><br><div class=\\\"desc max-w-500px\\\"> 我拥有很多神奇的能力哦~<br></div><div class=\\\"ctrl\\\"><ul><li>我可以帮助你实现绘画创作的愿望</li><li>快来尽情释放你的想象力吧</li><li>我可以让你的创意得以实现</li><li class=\\\"desc max-w-500px\\\">让我们一起创造美丽的艺术作品吧！</li></ul></div></div><div class=\\\"introduceright\\\"><img class=\\\"robotImg\\\" src=\\\"\" + _imports_0 + \"\\\"></div>\", 2);\nconst _hoisted_14 = [_hoisted_12];\nconst _hoisted_15 = {\n  key: 1,\n  class: \"chatbox\",\n  ref: \"chatbox\"\n};\nconst _hoisted_16 = {\n  class: \"user-message clearfix\"\n};\nconst _hoisted_17 = {\n  class: \"message-time\",\n  id: \"time1\"\n};\nconst _hoisted_18 = {\n  class: \"chat-message user\"\n};\nconst _hoisted_19 = {\n  class: \"bot-message\"\n};\nconst _hoisted_20 = [\"innerHTML\"];\nconst _hoisted_21 = {\n  class: \"chandler-content_input-box\"\n};\nconst _hoisted_22 = {\n  class: \"chandler-content_input-box-content\"\n};\nconst _hoisted_23 = {\n  class: \"top\"\n};\nconst _hoisted_24 = {\n  class: \"bottom\"\n};\nconst _hoisted_25 = {\n  class: \"left\"\n};\nconst _hoisted_26 = {\n  key: 0,\n  class: \"audio\"\n};\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-loading\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_28 = {\n  class: \"right\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(this.data ? this.data : '智能陪聊助手'), 1 /* TEXT */), _createCommentVNode(\" 中间内容 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [this.chatData.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [!this.data ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [..._hoisted_10])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [..._hoisted_14]))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.chatData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, _toDisplayString(item.chatTime), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_18, _toDisplayString(item.chatUser), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_19, [_createCommentVNode(\" <div class=\\\"chat-message chatbot\\\">{{item.chatGpt}}</div> \"), _createElementVNode(\"div\", {\n      class: \"chat-message chatbot\",\n      innerHTML: item.chatGpt\n    }, null, 8 /* PROPS */, _hoisted_20)])]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */))])]), _createCommentVNode(\" 底部输入框 \"), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => this.messageData = $event),\n    class: \"chandler-content_input-area\",\n    placeholder: \"可以问我任何问题哦~\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, this.messageData]])]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"img\", {\n    class: \"paperclip\",\n    src: _imports_1,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.voiceBtn && $options.voiceBtn(...args))\n  }), this.isAudio ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_hoisted_27, _createTextVNode(\" 正在录音中，点击暂停…… \")])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"img\", {\n    class: \"send\",\n    src: _imports_2,\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendBtn && $options.sendBtn(...args))\n  })])])])])])])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","key","_createStaticVNode","_hoisted_8","_hoisted_12","ref","id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","data","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","chatData","length","_hoisted_6","_hoisted_7","_hoisted_10","_hoisted_11","_hoisted_14","_hoisted_15","_Fragment","_renderList","item","index","_hoisted_16","_hoisted_17","chatTime","_hoisted_18","chatUser","_hoisted_19","innerHTML","chatGpt","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_cache","$event","messageData","placeholder","_hoisted_24","_hoisted_25","src","onClick","args","$options","voiceBtn","isAudio","_hoisted_26","_hoisted_27","_createTextVNode","_hoisted_28","sendBtn"],"sources":["D:\\代码\\vscodeProjects\\AiEducation\\vue_aieducation\\src\\components\\ChatBot\\index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"chat-com-content-wrap\">\r\n              <div class=\"content-header\">\r\n                {{this.data?this.data:'智能陪聊助手'}}\r\n              </div>\r\n              <!-- 中间内容 -->\r\n              <div class=\"chat-content\">\r\n                <div class=\"chandler-content_main-board\">\r\n                  <div class=\"chandler-ext-content_communication-wrap\">\r\n                     <div v-if=\"this.chatData.length == 0\" class=\"chatbox\">\r\n\r\n                        <div v-if=\"!this.data\" class=\"boctx-wrap-introduce\">\r\n                            <div class=\"introduceleft\">\r\n                                <h2 class=\"max-w-500px\">我是你的心理陪聊助手</h2><br>\r\n                                <div class=\"desc max-w-500px\">\r\n                                    我拥有很多神奇的能力哦~<br>\r\n                                </div>\r\n                                <div class=\"ctrl\">\r\n                                    <ul >\r\n                                        <li>我可以陪你聊天，倾听你的心声</li>\r\n                                        <li>我可以为你解答疑惑，帮助你学习</li>\r\n                                        <li>我可以帮你排解压力、减轻焦虑</li>\r\n                                        <li class=\"desc max-w-500px\">快来和我聊天吧~</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"introduceright\">\r\n                                <img class=\"robotImg\" \r\n                                src=\"@/assets/img/robot04.gif\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div v-else class=\"boctx-wrap-introduce\">\r\n                            <div class=\"introduceleft\">\r\n                                <h2 class=\"max-w-500px\">我是你的智能画图助手</h2><br>\r\n                                <div class=\"desc max-w-500px\">\r\n                                    我拥有很多神奇的能力哦~<br>\r\n                                </div>\r\n                                <div class=\"ctrl\">\r\n                                    <ul >\r\n                                        <li>我可以帮助你实现绘画创作的愿望</li>\r\n                                        <li>快来尽情释放你的想象力吧</li>\r\n                                        <li>我可以让你的创意得以实现</li>\r\n                                        <li class=\"desc max-w-500px\">让我们一起创造美丽的艺术作品吧！</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"introduceright\">\r\n                                <img class=\"robotImg\" \r\n                                src=\"@/assets/img/robot04.gif\">\r\n                            </div>\r\n                        </div>\r\n\r\n                     </div>\r\n                    <div v-else class=\"chatbox\" ref=\"chatbox\">\r\n                        <li v-for=\"(item,index) in this.chatData\" :key=\"index\">\r\n                            <div class=\"user-message clearfix\">\r\n                                <div class=\"message-time\" id=\"time1\"> {{item.chatTime}} </div>\r\n                                <div class=\"chat-message user \" >{{item.chatUser}}</div>\r\n                            </div>\r\n                            <div class=\"bot-message\">\r\n                                <!-- <div class=\"chat-message chatbot\">{{item.chatGpt}}</div> -->\r\n                                <div class=\"chat-message chatbot\" v-html=\"item.chatGpt\"></div>\r\n                            </div>\r\n                        </li> \r\n                    </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <!-- 底部输入框 -->\r\n                  <div class=\"chandler-content_input-box\" >\r\n                    <div class=\"chandler-content_input-box-content\">\r\n                      <div class=\"top\">\r\n                        <textarea v-model=\"this.messageData\" \r\n                                  class=\"chandler-content_input-area\" \r\n                                  placeholder=\"可以问我任何问题哦~\"></textarea>\r\n                      </div>\r\n                      <div class=\"bottom\">\r\n                        <div class=\"left\">\r\n                           <img class=\"paperclip\" src=\"@/assets/img/voiceImg.jpg\" @click=\"voiceBtn\">\r\n                           <div class=\"audio\" v-if=\"this.isAudio\">\r\n                            <i class=\"el-icon-loading\"></i>\r\n                            正在录音中，点击暂停……\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"right\">\r\n                                <img class=\"send\" src=\"@/assets/img/send.jpg\" @click=\"sendBtn\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {reqGptAsk,reqAudioGet,reqImageWordtoimg} from '@/api'\r\nimport * as lamejs from 'lamejs';\r\nimport { Message } from 'element3'\r\nexport default {\r\n    props:['data'],\r\n    mounted() {\r\n        console.log(!this.data);\r\n    },\r\n    data () {\r\n        return {\r\n            chatData:[],\r\n            messageData:'',\r\n            mediaRecorder: null,\r\n            chunks: [],\r\n            isAudio: false\r\n        }\r\n    },\r\n    methods:{\r\n    getCurrentTime() {\r\n      return new Date().toLocaleString();\r\n    },\r\n    async voiceBtn(){\r\n        this.isAudio = !this.isAudio\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            this.mediaRecorder = new MediaRecorder(stream);\r\n    \r\n            this.mediaRecorder.ondataavailable = event => {\r\n              this.chunks.push(event.data);\r\n            };\r\n            if(this.isAudio){\r\n                this.mediaRecorder.start();\r\n            }else{\r\n                // mediaRecorder.stop();\r\n              const blob = new Blob(this.chunks, { type: 'audio/wav' });\r\n              this.convertToMP3(blob);\r\n              this.mediaRecorder = null;\r\n              this.chunks = [];\r\n            }\r\n      } catch (error) {\r\n        console.error('无法访问麦克风:', error);\r\n      }\r\n    },\r\n\r\n    convertToMP3(blob) {\r\n    //   const lame = new lamejs();\r\n      const mp3Encoder = new lamejs.Mp3Encoder(1, 44100, 128);\r\n      const fileReader = new FileReader();\r\n      \r\n      fileReader.onload = () => {\r\n        const pcmData = new Int16Array(fileReader.result);\r\n        const mp3Data = mp3Encoder.encodeBuffer(pcmData);\r\n        const mp3Buffer = mp3Encoder.flush();\r\n        const mp3Blob = new Blob([new Uint8Array(mp3Buffer)], { type: 'audio/mp3' });\r\n        this.voicesend(mp3Blob);\r\n      };\r\n      fileReader.readAsArrayBuffer(blob);\r\n    },\r\n\r\n    async voicesend(blob){\r\n        console.log('收到了',blob);\r\n        // 将blob对象传递给后端，这里你可以使用fetch或者其他HTTP请求库\r\n        const formData = new FormData();\r\n        formData.append('audio', blob, 'recording.mp3');\r\n        console.log(formData);\r\n        try {\r\n            const res = await reqAudioGet(formData)\r\n            console.log(res.data);\r\n            \r\n        } catch (error) {\r\n            console.log('reqAudioGet',error);\r\n        }\r\n\r\n    },\r\n\r\n    async sendBtn(){\r\n        if(this.messageData == '') {\r\n            Message.error('消息不能为空哦~')\r\n            return\r\n        }\r\n        const time = this.getCurrentTime()\r\n        const message = this.messageData\r\n        this.chatData.push({\r\n            chatTime: time,\r\n            chatUser: this.messageData,\r\n            chatGpt: '正在加载中，请稍后……'\r\n        });\r\n        const lastItem = this.chatData[this.chatData.length - 1];\r\n        this.messageData = ''\r\n        console.log(message);\r\n        try {\r\n            if(!this.data){\r\n                const res = await reqGptAsk({question:message})\r\n                console.log(res.data);\r\n                lastItem.chatGpt = res.data.data;\r\n            }else {\r\n                const res =await reqImageWordtoimg({word:message})\r\n                // 解码 Base64 字符串\r\n                const binaryString = atob(res.data.data);\r\n\r\n                // 将二进制数据转换为图像格式\r\n                const imageData = 'data:image/png;base64,' + btoa(binaryString);\r\n                // const imageData = 'https://img-s-msn-com.akamaized.net/tenant/amp/entityid/BB1nwXcZ.img?w=768&h=1153&m=6&x=549&y=130&s=162&d=403'\r\n\r\n                // 将图像数据存储在组件的 imageData 变量中\r\n                lastItem.chatGpt = `<image style='width:400px;' src='${imageData}' />`\r\n\r\n\r\n            }\r\n      } catch (error) {\r\n        console.log('reqGptAsk',error);\r\n      }\r\n    }\r\n    },\r\n  \r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.introduceleft {\r\n    margin-left: 20px;\r\n}\r\n.desc {\r\n    font-size: 18px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 1.2;\r\n}\r\n.left h2 {\r\n    margin-bottom: 4px;\r\n    color: #120f18;\r\n    font-family: IBM Plex Sans;\r\n    font-size: 20px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 1.2;\r\n}\r\n.left .audio {\r\n    padding: 5px 8px;\r\n    background: #d7d7e4;\r\n    border-radius: 5px;\r\n}\r\n.max-w-500px {\r\n    max-width: 500px;\r\n}\r\n.ctrl{\r\n    color: #413659;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n}\r\n.robotImg {\r\n    max-width: 100%;\r\n    height: auto;\r\n    display: block;\r\n    /* vertical-align: middle; */\r\n}\r\n.boctx-wrap-introduce{\r\n    width: 100%;\r\n    padding: 20px 24px;\r\n    border-radius: 32px;\r\n    margin-top: 20px;\r\n    background: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.boctx-wrap-introduce .left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n}\r\n\r\n.robotImg {\r\n    height: 200px;\r\n}\r\n/* 聊天内容区域 */\r\n\r\nul, ol, li {\r\n      list-style-type: none;\r\n  }\r\n.message-time {\r\n    font-size: 12px;\r\n    color: gray;\r\n    margin: 4px 0;\r\n    text-align: center;\r\n}\r\n\r\n.chatbox {\r\n    border-radius: 3px;\r\n    height: 100%;\r\n    margin: 0 0 20px;\r\n    padding: 10px;\r\n    min-height: 300px;\r\n}\r\n.chat-message {\r\n    font-size: 16px;\r\n    display: inline-block;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    margin-bottom: 22px;\r\n}\r\n\r\n.user {\r\n    background-color: #fff;\r\n    color: #333;\r\n    float: right;\r\n}\r\n\r\n.clearfix::after {\r\n    content: \"\";\r\n    display: table;\r\n    clear: both;\r\n}\r\n\r\n.chatbot {\r\n    /* background-color: #4a40b1de; */\r\n    background-color: #6255e7de;\r\n    color: #fff;\r\n}\r\n\r\n/* 总体框架 */\r\n .right .send {\r\n    margin-left: 8px;\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 50%;\r\n    background: #ffc800;\r\n    transition: all .3s linear;\r\n    cursor: pointer;\r\n    background-size: 24px 24px;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n}\r\n.left .paperclip {\r\n    margin-right: 15px;\r\n    /* width: 22px; */\r\n    height: 25px;\r\n    display: block;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n}\r\n\r\n.left {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n}\r\n\r\n.bottom {\r\n    padding: 8px 12px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n.right {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n}\r\n.chandler-content_input-area {\r\n    resize: none;\r\n    width: 100%;\r\n    padding: 12px 10px;\r\n    height: 11vh;\r\n    max-height: 100px;\r\n    min-height: 60px;\r\n    border: unset;\r\n    color: #413659;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 22px;\r\n    outline: none;\r\n    box-sizing: border-box;\r\n    background: transparent;\r\n}\r\n.top {\r\n    flex: 1;\r\n    width: 100%;\r\n    padding: 0 14px;\r\n}\r\n.chat-com-content-wrap .chandler-content_main-board {\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    flex: 1 1 0%;\r\n    overscroll-behavior: contain;\r\n}\r\n.chat-com-content-wrap .chat-content {\r\n    width: 100%;\r\n    height: calc(100% - 56px);\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    user-select: text;\r\n}\r\n.chat-com-content-wrap {\r\n    width: 100%;\r\n    height: calc(100% - 46px);\r\n    flex: 1 1 0%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: 900px;\r\n    margin: 16px auto 0px;\r\n    border-radius: 36px;\r\n    /* background: rgba(255, 255, 255, 0.62); */\r\n    background: #ebeef5;\r\n    overflow: hidden;\r\n}\r\n\r\n.content-header {\r\n    width: 100%;\r\n    /* height: 56px; */\r\n    padding: 24px 0 12px 24px;\r\n    backdrop-filter: blur(22px);\r\n    border-radius: 36px 36px 0 0;\r\n    font-size: 18px;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    background: linear-gradient(10deg,rgba(255,255,255,.72) 75.63%,rgba(74, 71, 243, 0.72) 100%);\r\n    color: var(--text-color);\r\n    z-index: 10;\r\n\r\n}\r\n\r\n.chandler-content_input-box {\r\n    position: relative;\r\n    width: 100%;\r\n    z-index: 1;\r\n    padding: 0 12px 12px;\r\n}\r\n.chandler-content_input-box-content {\r\n    width: 100%;\r\n    background: rgba(255,255,255,.72);\r\n    border-radius: 22px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    box-shadow: 0 3px rgba(112, 110, 245, 0.82) ;\r\n    overflow: hidden;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n/* 文本框 */\r\n.chandler-content_input-area:focus {\r\n  border: 1px solid blue;\r\n  transition:  0.3s ease; /* 添加过渡效果 */\r\n  border-radius: 22px;\r\n}\r\n\r\n/* 中间聊天区 */\r\n.chandler-ext-content_communication-wrap {\r\n    width: 100%;\r\n    padding: 0 20px 30px;\r\n    min-height: 690px;\r\n    max-height: 690px;\r\n    overflow: auto;\r\n}\r\n/* 设置滚动条的样式 */\r\n.chandler-ext-content_communication-wrap::-webkit-scrollbar {\r\n   width:8px;\r\n}\r\n/* 滚动槽 */\r\n.chandler-ext-content_communication-wrap::-webkit-scrollbar-track {\r\n   -webkit-box-shadow:rgba(254,254,254,1);\r\n   border-radius:10px;\r\n}\r\n/* 滚动条滑块 */\r\n.chandler-ext-content_communication-wrap::-webkit-scrollbar-thumb {\r\n   border-radius:3px;\r\n   background-color: rgba(40,40,40,0.6);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}