{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array-buffer.detached.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer.js\");\nrequire(\"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nfunction new_byte(count) {\n  return new Int8Array(count);\n}\nfunction new_short(count) {\n  return new Int16Array(count);\n}\nfunction new_int(count) {\n  return new Int32Array(count);\n}\nfunction new_float(count) {\n  return new Float32Array(count);\n}\nfunction new_double(count) {\n  return new Float64Array(count);\n}\nfunction new_float_n(args) {\n  if (args.length == 1) {\n    return new_float(args[0]);\n  }\n  var sz = args[0];\n  args = args.slice(1);\n  var A = [];\n  for (var i = 0; i < sz; i++) {\n    A.push(new_float_n(args));\n  }\n  return A;\n}\nfunction new_int_n(args) {\n  if (args.length == 1) {\n    return new_int(args[0]);\n  }\n  var sz = args[0];\n  args = args.slice(1);\n  var A = [];\n  for (var i = 0; i < sz; i++) {\n    A.push(new_int_n(args));\n  }\n  return A;\n}\nfunction new_short_n(args) {\n  if (args.length == 1) {\n    return new_short(args[0]);\n  }\n  var sz = args[0];\n  args = args.slice(1);\n  var A = [];\n  for (var i = 0; i < sz; i++) {\n    A.push(new_short_n(args));\n  }\n  return A;\n}\nfunction new_array_n(args) {\n  if (args.length == 1) {\n    return new Array(args[0]);\n  }\n  var sz = args[0];\n  args = args.slice(1);\n  var A = [];\n  for (var i = 0; i < sz; i++) {\n    A.push(new_array_n(args));\n  }\n  return A;\n}\nvar Arrays = {};\nArrays.fill = function (a, fromIndex, toIndex, val) {\n  if (arguments.length == 2) {\n    for (var i = 0; i < a.length; i++) {\n      a[i] = arguments[1];\n    }\n  } else {\n    for (var i = fromIndex; i < toIndex; i++) {\n      a[i] = val;\n    }\n  }\n};\nvar System = {};\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\n  var srcEnd = srcPos + length;\n  while (srcPos < srcEnd) dest[destPos++] = src[srcPos++];\n};\nSystem.out = {};\nSystem.out.println = function (message) {\n  console.log(message);\n};\nSystem.out.printf = function () {\n  console.log.apply(console, arguments);\n};\nvar Util = {};\nUtil.SQRT2 = 1.41421356237309504880;\nUtil.FAST_LOG10 = function (x) {\n  return Math.log10(x);\n};\nUtil.FAST_LOG10_X = function (x, y) {\n  return Math.log10(x) * y;\n};\nfunction ShortBlock(ordinal) {\n  this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock.short_block_allowed = new ShortBlock(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock.short_block_coupled = new ShortBlock(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock.short_block_dispensed = new ShortBlock(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock.short_block_forced = new ShortBlock(3);\nvar Float = {};\nFloat.MAX_VALUE = 3.4028235e+38;\nfunction VbrMode(ordinal) {\n  this.ordinal = ordinal;\n}\nVbrMode.vbr_off = new VbrMode(0);\nVbrMode.vbr_mt = new VbrMode(1);\nVbrMode.vbr_rh = new VbrMode(2);\nVbrMode.vbr_abr = new VbrMode(3);\nVbrMode.vbr_mtrh = new VbrMode(4);\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\nvar assert = function (x) {\n  //console.assert(x);\n};\nmodule.exports = {\n  \"System\": System,\n  \"VbrMode\": VbrMode,\n  \"Float\": Float,\n  \"ShortBlock\": ShortBlock,\n  \"Util\": Util,\n  \"Arrays\": Arrays,\n  \"new_array_n\": new_array_n,\n  \"new_byte\": new_byte,\n  \"new_double\": new_double,\n  \"new_float\": new_float,\n  \"new_float_n\": new_float_n,\n  \"new_int\": new_int,\n  \"new_int_n\": new_int_n,\n  \"new_short\": new_short,\n  \"new_short_n\": new_short_n,\n  \"assert\": assert\n};","map":{"version":3,"names":["new_byte","count","Int8Array","new_short","Int16Array","new_int","Int32Array","new_float","Float32Array","new_double","Float64Array","new_float_n","args","length","sz","slice","A","i","push","new_int_n","new_short_n","new_array_n","Array","Arrays","fill","a","fromIndex","toIndex","val","arguments","System","arraycopy","src","srcPos","dest","destPos","srcEnd","out","println","message","console","log","printf","apply","Util","SQRT2","FAST_LOG10","x","Math","log10","FAST_LOG10_X","y","ShortBlock","ordinal","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float","MAX_VALUE","VbrMode","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","assert","module","exports"],"sources":["D:/代码/vscodeProjects/AiEducation/vue_aieducation/node_modules/lamejs/src/js/common.js"],"sourcesContent":["function new_byte(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n(args) {\n    if (args.length == 1) {\n        return new_float(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n(args));\n    }\n    return A;\n}\nfunction new_int_n(args) {\n    if (args.length == 1) {\n        return new_int(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n(args));\n    }\n    return A;\n}\n\n\nvar Arrays = {};\n\nArrays.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System = {};\n\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\nSystem.out = {};\nSystem.out.println = function (message) {\n    console.log(message);\n}\n\nSystem.out.printf = function () {\n    console.log.apply(console, arguments);\n}\n\n\nvar Util = {};\nUtil.SQRT2 = 1.41421356237309504880;\nUtil.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock.short_block_allowed = new ShortBlock(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock.short_block_coupled = new ShortBlock(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock.short_block_dispensed = new ShortBlock(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock.short_block_forced = new ShortBlock(3);\n\nvar Float = {};\nFloat.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode.vbr_off = new VbrMode(0);\nVbrMode.vbr_mt = new VbrMode(1);\nVbrMode.vbr_rh = new VbrMode(2);\nVbrMode.vbr_abr = new VbrMode(3);\nVbrMode.vbr_mtrh = new VbrMode(4);\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\n\nvar assert = function (x) {\n    //console.assert(x);\n};\n\nmodule.exports = {\n    \"System\": System,\n    \"VbrMode\": VbrMode,\n    \"Float\": Float,\n    \"ShortBlock\": ShortBlock,\n    \"Util\": Util,\n    \"Arrays\": Arrays,\n    \"new_array_n\": new_array_n,\n    \"new_byte\": new_byte,\n    \"new_double\": new_double,\n    \"new_float\": new_float,\n    \"new_float_n\": new_float_n,\n    \"new_int\": new_int,\n    \"new_int_n\": new_int_n,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}